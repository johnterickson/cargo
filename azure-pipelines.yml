# Recommened editor for this file: https://github.com/Microsoft/azure-pipelines-vscode
name: cargo

jobs:
  - job: windows
    strategy:
      matrix:
        cross_compile:
          OTHER_TARGET: 'i686-pc-windows-msvc'
        x86_x64:
          MINIMAL_VERSIONS: true
          CFG_DISABLE_CROSS_TESTS: 1
    pool:
      vmImage: vs2017-win2016
    steps:
        # - if NOT defined APPVEYOR_PULL_REQUEST_NUMBER if "%APPVEYOR_REPO_BRANCH%" == "master" appveyor exit 
        # TODO
        # appveyor-retry appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
      - powershell: Invoke-WebRequest -Uri https://win.rustup.rs/ -OutFile rustup-init.exe
      - script: |
          rustup-init.exe -y --default-host x86_64-pc-windows-msvc --default-toolchain nightly
          set PATH=%PATH%;%USERPROFILE%\.cargo\bin
          if defined MINIMAL_VERSIONS rustup toolchain install 1.31.0
          if defined OTHER_TARGET rustup target add %OTHER_TARGET%
          rustc -V
          cargo -V
          git submodule update --init
            # we don't have ci time to run the full `cargo test` with `minimal-versions` like
            # - if defined MINIMAL_VERSIONS cargo +nightly generate-lockfile -Z minimal-versions && cargo +stable test
            # so we just run `cargo check --tests` like
          if defined MINIMAL_VERSIONS cargo +nightly generate-lockfile -Z minimal-versions && cargo +1.31.0 check --tests --features=deny-warnings
          if NOT defined MINIMAL_VERSIONS cargo test --features=deny-warnings
  
  - job: linux_min_ver
    pool:
      vmImage: ubuntu-16.04
    variables:
      TARGET:  x86_64-unknown-linux-gnu
      ALT: i686-unknown-linux-gnu
      RUST_VERSION: 1.31.0
    steps:
      - script: |
          sudo apt install gcc-multilib -y
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain none
          export PATH=$PATH:~/.cargo/bin
          rustup toolchain install $RUST_VERSION
          rustup default stable
          rustup target add $ALT
          rustup toolchain install nightly
          cargo +nightly generate-lockfile -Z minimal-versions
          cargo -V
          cargo test --features=deny-warnings

  - job: linux
    pool:
      vmImage: ubuntu-16.04
    strategy:
      matrix:
        x86_x64_i686_stable:
          TARGET:  x86_64-unknown-linux-gnu
          ALT: i686-unknown-linux-gnu
          CHANNEL: stable
          # if: branch != master OR type = pull_request
        x86_x64_i686_beta:
          TARGET:  x86_64-unknown-linux-gnu
          ALT: i686-unknown-linux-gnu
          CHANNEL: beta
          # if: branch != master OR type = pull_request
        x86_x64_i686_nightly:
          TARGET:  x86_64-unknown-linux-gnu
          ALT: i686-unknown-linux-gnu
          CHANNEL: nightly
          # if: branch != master OR type = pull_request
    steps:
      - script: |
          sudo apt install gcc-multilib -y
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $CHANNEL --default-host $TARGET
          export PATH=$PATH:~/.cargo/bin
          rustup target add $ALT
          cargo test --features=deny-warnings
        displayName: test 
      - script: |
          export PATH=$PATH:~/.cargo/bin
          curl -Lf https://github.com/rust-lang-nursery/mdBook/releases/download/v0.1.7/mdbook-v0.1.7-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=$HOME/.cargo/bin
          cargo doc --no-deps
          cd src/doc && mdbook build --dest-dir ../../target/doc
        displayName: docs
        condition:  eq(variables['CHANNEL'], 'nightly')
  - job: mac
    strategy:
      matrix:
        osx:
          TARGET: x86_64-apple-darwin
          ALT: i686-apple-darwin
          CHANNEL: stable
          # if: branch != master OR type = pull_request
    pool:
      vmImage: macos-10.13
    steps:
      - script: |
          sudo xcode-select -s /Applications/Xcode_9.2.app/Contents/Developer
          xcodebuild -version
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $CHANNEL --default-host $TARGET
          export PATH=$PATH:~/.cargo/bin
          rustup target add $ALT
          cargo test --features=deny-warnings
        
